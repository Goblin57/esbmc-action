name: ESBMC verification action
description: Verifies single- and multithreaded C/C++, CUDA, CHERI, Kotlin, Python, and Solidity programs using the ESBMC.

inputs:
  esbmc-options:
    description: Options to be used with ESBMC.
    required: false
    default: --incremental-bmc --quiet --color --verbosity 4
  create-artifact:
    description: Whether or not to create an artifact containing ESBMC output files (y/n).
    required: false
    default: n
  artifact-retention-days:
    description: Number of days after which any produced artifacts will expire.
    required: false
    default: "0"
  artifact-compression-level:
    description: The level of compression for Zlib to be applied to the artifact archive. Can take values from 0 to 9.
    required: false
    default: "6"

runs:
  using: 'composite'
  steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
    

    - name: Get Git Diff
      id: get-diff
      run: |
        echo "FILE_DIFF<<EOF" >> $GITHUB_ENV
        echo "$(git diff --name-only --diff-filter=ACMR HEAD HEAD^ | grep -E '\.c|\.cpp')" >> "$GITHUB_ENV"
        echo "EOF" >> $GITHUB_ENV
      shell: bash
    
    - run: |
        echo "----------------------------------------------------"
        echo "No git diff in files of the correct type have been detected."
      shell: bash
      if: ${{ env.FILE_DIFF == '' }}
    
    - name: Get output file name
      run: |
        options="${{ inputs.esbmc-options }}"
        if [[ $options =~ "--output-goto" ]]; then
          goto_filename=`echo "$options" | grep -oP "(--output-goto\s+\K[^\"]\S*(?=\s*?))|(--output-goto\s+\"\K.*(?=\"))"`
          echo "GOTO_FILENAME=$goto_filename" >> $GITHUB_ENV
        fi

        if [[ $options =~ "--file-output" ]]; then
          output_filename=`echo "$options" | grep -oP "(--file-output\s+\K[^\"]\S*(?=\s*?))|(--file-output\s+\"\K.*(?=\"))"`
          echo "OUTPUT_FILENAME=$output_filename" >> $GITHUB_ENV
        fi

        if [[ $options =~ "--witness-output" ]]; then
          witness_filename=`echo "$options" | grep -oP "(--witness-output\s+\K[^\"]\S*(?=\s*?))|(--witness-output\s+\"\K.*(?=\"))"`
          echo "WITNESS_FILENAME=$witness_filename" >> $GITHUB_ENV
        fi
      shell: bash
      if: ${{ env.FILE_DIFF != '' && (inputs.create-artifact == 'y' || inputs.create-artifact == 'Y') }}



    - name: Install ESBMC Linux
      run: |
        wget -q -O esbmc.zip https://github.com/esbmc/esbmc/releases/download/v7.6.1/release-ubuntu-latest.zip
        unzip -o -q esbmc.zip
        chmod +x $GITHUB_WORKSPACE/bin/esbmc
      shell: bash
      if: ${{ env.FILE_DIFF != '' && runner.os == 'Linux' }}
    
    - name: Run ESBMC Linux
      run: |
        while IFS= read -r path || [[ -n $path ]]
        do
          echo "----------------------------------------------------"
          echo "Running ESBMC on $path"
          $GITHUB_WORKSPACE/bin/esbmc ${{ inputs.esbmc-options }} "$path" || true

          if [[ "${{ inputs.esbmc-options }}" =~ "--output-goto" ]]; then
            mv "$GOTO_FILENAME" "__$path_$GOTO_FILENAME"
          fi

          if [[ "${{ inputs.esbmc-options }}" =~ "--file-output" ]]; then
            echo "$OUTPUT_FILENAME"
            echo "$path"
            echo "__""$path""_""$OUTPUT_FILENAME"
            mv "$OUTPUT_FILENAME" "__$path_$OUTPUT_FILENAME"
          fi

          if [[ "${{ inputs.esbmc-options }}" =~ "--witness-output" ]]; then
            mv "$WITNESS_FILENAME" "__$path_$WITNESS_FILENAME"
          fi
        done < <(printf '%s' "${{ env.FILE_DIFF }}")
      shell: bash
      if: ${{ env.FILE_DIFF != '' && runner.os == 'Linux' }}



    - name: Install ESBMC macOS
      run: |
        brew install -q boost
        wget -q -O esbmc.zip https://github.com/esbmc/esbmc/releases/download/v7.6/release-macos-latest.zip
        unzip -o -q esbmc.zip
        chmod +x $GITHUB_WORKSPACE/bin/esbmc
      shell: bash
      if: ${{ env.FILE_DIFF != '' && runner.os == 'macOS' }}
    
    - name: Run ESBMC macOS
      run: |
        while IFS= read -r path || [[ -n $path ]]
        do
          echo "----------------------------------------------------"
          echo "Running ESBMC on $path"
          $GITHUB_WORKSPACE/bin/esbmc --smtlib --smt-formula-only ${{ inputs.esbmc-options }} "$path" || true
        done < <(printf '%s' "${{ env.FILE_DIFF }}")
      shell: bash
      if: ${{ env.FILE_DIFF != '' && runner.os == 'macOS' }}
    


    - name: Install ESBMC Windows
      run: |
        $client = new-object System.Net.WebClient
        $client.DownloadFile("https://github.com/esbmc/esbmc/releases/download/v7.6.1/release-windows-latest.zip", "$env:GITHUB_WORKSPACE\esbmc.zip")
        unzip -o -q esbmc.zip
        chmod +x $env:GITHUB_WORKSPACE/bin/esbmc
      shell: powershell
      if: ${{ env.FILE_DIFF != '' && runner.os == 'Windows' }}
    
    - name: Run ESBMC Windows
      run: |
        while IFS= read -r path || [[ -n $path ]]
        do
          echo "----------------------------------------------------"
          echo "Running ESBMC on $path"
          $GITHUB_WORKSPACE/bin/esbmc ${{ inputs.esbmc-options }} "$path" || true
        done < <(printf '%s' "${{ env.FILE_DIFF }}")
      shell: bash
      if: ${{ env.FILE_DIFF != '' && runner.os == 'Windows' }}
    


    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: esbmc_output
        path: |
          *_${{ env.GOTO_FILENAME }}
          *_${{ env.OUTPUT_FILENAME }}
          *_${{ env.WITNESS_FILENAME }}
        if-no-files-found: warn
        retention-days: ${{ inputs.artifact-retention-days }}
        compression-level: ${{ inputs.artifact-compression-level }}
      if: ${{ env.FILE_DIFF != '' && (inputs.create-artifact == 'y' || inputs.create-artifact == 'Y') }}

    - run: |
        echo "----------------------------------------------------"
        echo "Finished verifying files."
      shell: bash